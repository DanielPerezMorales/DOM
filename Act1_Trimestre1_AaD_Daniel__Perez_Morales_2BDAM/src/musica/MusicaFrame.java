/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package musica;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author danie
 */
public class MusicaFrame extends javax.swing.JFrame {

    /**
     * Creates new form MusicaFrame
     */
    DocumentBuilderFactory dbf;
    DocumentBuilder db;
    Document doc;

    public MusicaFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jButton1.setText("Procesar XML");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar XML");
        jButton2.setMaximumSize(new java.awt.Dimension(101, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(99, 23));
        jButton2.setPreferredSize(new java.awt.Dimension(99, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Mostrar XML");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jButton2.getAccessibleContext().setAccessibleDescription("");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //Creamos la instancia de dbf
            dbf = DocumentBuilderFactory.newInstance();
            //Creamos un nuevo documento vacío a partir de dicha instancia
            db = dbf.newDocumentBuilder();
            //Creamos un objeto File con nuestro fichero XML
            File fichero = new File("Musica.xml");
            //Creamos el arbol DOM a partir del fichero
            doc = db.parse(fichero);
            //normalize. Elimina nodos vacíos y combina nodos adyacentes en caso de que los hubiera
            doc.getDocumentElement().normalize();
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Se ha procesado correctamente","XML procesado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            BufferedWriter bf_copia;
            //Creamos el fichero donde se va a escribir nuestro XML
            bf_copia = new BufferedWriter(new FileWriter("MusicaCopia.txt"));
            String linea;
            linea = "RAIZ: " + doc.getDocumentElement().getNodeName();
            bf_copia.write(linea);
            bf_copia.newLine();
            linea = "";
            bf_copia.write(linea);
            bf_copia.newLine();

            //Nodo Cantantes
            NodeList ListaCantantes = doc.getElementsByTagName("Cantantes");
            //Recorremos los nodos Cantantes
            for (int i = 0; i < ListaCantantes.getLength(); i++) {
                //Cada item de la lista es un nodo
                Node nodo = ListaCantantes.item(i);
                //Hacemos un casting a Element ya que cada nodo es un Element 
                Element elem = (Element) nodo;
                //Mostramos el valor de la etiqueta Cantantes
                linea = " -" + elem.getTagName();
                bf_copia.write(linea);
                bf_copia.newLine();

                //Recorremos nodo hijo.
                //Nodo Cantantes
                NodeList listaCantante = doc.getElementsByTagName("Cantante");

                //Recorremos los nodos Cantante
                for (int x = 0; x < listaCantante.getLength(); x++) {
                    //Cada item de la lista es un nodo
                    Node cantante = listaCantante.item(x);
                    //Hacemos un casting a Element ya que cada nodo es un Element 
                    Element elem2 = (Element) cantante;
                    //Mostramos el valor del atributo de la etiqueta Cantante
                    linea = "    -" + elem2.getTagName() + " - id " + elem2.getAttribute("id");
                    bf_copia.write(linea);
                    bf_copia.newLine();

                    //Cantante tiene nodos hijos: nombre, nombre_artistico, nacionalidad, Genero, edad y albumes
                    NodeList nodoHijos = elem2.getChildNodes();

                    //Recorremos los nodos hijos.
                    //Ver arbol DOM
                    for (int j = 0; j < nodoHijos.getLength(); j++) {
                        Node nodoHijo = nodoHijos.item(j);

                        //Comprobamos el tipo de los nodos hijos. Si son del tipo ELEMENT, mostramos el valor.
                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "nombre".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);//Vamos escribiendo en el fichero
                            bf_copia.newLine();
                        }
                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "nombre_artistico".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);
                            bf_copia.newLine();
                        }

                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "nacionalidad".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);
                            bf_copia.newLine();
                        }
                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "Género".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);
                            bf_copia.newLine();
                        }
                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "edad".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);
                            bf_copia.newLine();
                        }
                        if (nodoHijo.getNodeType() == Node.ELEMENT_NODE && "Albumes".equals(nodoHijo.getNodeName())) {
                            linea = "       - Etiqueta: " + nodoHijo.getNodeName() + ". Valor:" + nodoHijo.getTextContent();
                            bf_copia.write(linea);
                            bf_copia.newLine();
                        }
                    }
                }
            }
            bf_copia.close();
        } catch (IOException ex) {
            Logger.getLogger(MusicaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "El fichero XML se ha guardado correctamente en el fichero txt","XML Guardado", JOptionPane.INFORMATION_MESSAGE);
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            //Creamos fichero donde esta guardado nuestro fichero XML
            File f = new File("./", "MusicaCopia.txt");
            FileReader fileReader;
            fileReader = new FileReader(f);
            BufferedReader bufferedReader = new BufferedReader(fileReader);

            String frase = "";
            String frase2 = "";
            System.out.println("");
            frase = bufferedReader.readLine();      //lee por lineas el texto
            while (frase != null) {
                frase2 = frase2 + frase + '\n';             //Otro String pero concatenando las frases del bufferedReader
                frase = bufferedReader.readLine();
            }
            bufferedReader.close();
            jTextArea1.setText(frase2);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MusicaFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MusicaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusicaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
